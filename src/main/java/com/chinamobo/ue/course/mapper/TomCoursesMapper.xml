<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinamobo.ue.course.dao.TomCoursesMapper" >
  <resultMap id="BaseResultMap" type="com.chinamobo.ue.course.entity.TomCourses" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="COURSE_ID" property="courseId" jdbcType="DECIMAL" />
    <result column="COURSE_NUMBER" property="courseNumber" jdbcType="VARCHAR" />
    <result column="COURSE_NAME" property="courseName" jdbcType="VARCHAR" />
    <result column="COURSE_ONLINE" property="courseOnline" jdbcType="VARCHAR" />
    <result column="COURSE_INTRODUCTION" property="courseIntroduction" jdbcType="VARCHAR" />
    <result column="COURSE_TYPE" property="courseType" jdbcType="VARCHAR" />
    <result column="E_CURRENCY" property="eCurrency" jdbcType="DECIMAL" />
    <result column="COURSE_GRADE_DIMENSIONS" property="courseGradeDimensions" jdbcType="VARCHAR" />
    <result column="LECTURER_GRADE_DIMENSIONS" property="lecturerGradeDimensions" jdbcType="VARCHAR" />
    <result column="LECTURERS" property="lecturers" jdbcType="VARCHAR" />
    <result column="COURSE_IMG" property="courseImg" jdbcType="VARCHAR" />
    <result column="COURSE_DOWNLOADABLE" property="courseDownloadable" jdbcType="VARCHAR" />
    <result column="IS_EXCELLENT_COURSE" property="isExcellentCourse" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="OPEN_COMMENT" property="openComment" jdbcType="VARCHAR" />
    <result column="OPEN_COURSE" property="openCourse" jdbcType="VARCHAR" />
    <result column="ADMINS" property="admins" jdbcType="VARCHAR" />
    <result column="ADMIN_NAMES" property="adminNames" jdbcType="VARCHAR" />
    <result column="VIEWERS" property="viewers" jdbcType="DECIMAL" />
    <result column="THUMB_UP_COUNT" property="thumbUpCount" jdbcType="DECIMAL" />
    <result column="COMMENT_COUNT" property="commentCount" jdbcType="DECIMAL" />
    <result column="RATETIMES" property="ratetimes" jdbcType="DECIMAL" />
    <result column="COURSE_AVERAGE" property="courseAverage" jdbcType="DECIMAL" />
    <result column="TOT_SCORE" property="totScore" jdbcType="DECIMAL" />
    <result column="LECTURER_AVERAGE" property="lecturerAverage" jdbcType="DECIMAL" />
    <result column="COURSE_TIMES" property="courseTimes" jdbcType="DECIMAL" />
    <result column="SIGN_IN_TWO_DIMENSION_CODE" property="signInTwoDimensionCode" jdbcType="VARCHAR" />
    <result column="GRADE_TWO_DIMENSION_CODE" property="gradeTwoDimensionCode" jdbcType="VARCHAR" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="CREATOR_ID" property="creatorId" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <!-- 课程收藏 -->
  <resultMap type="com.chinamobo.ue.course.entity.TomFavoriteCourse" id="FavoriteResultMap">
  	<result column="COURSE_ID" property="courseId" jdbcType="DECIMAL" />
  	<result column="CODE" property="code" jdbcType="VARCHAR" />
  	<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  	<result column="STATUS" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap type="com.chinamobo.ue.course.entity.TomCourseThumbUp" id="ThumbUpResultMap">
  	<result column="COURSE_ID" property="courseId" jdbcType="DECIMAL" />
  	<result column="CODE" property="code" jdbcType="VARCHAR" />
  	<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  	<result column="STATUS" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <!-- 课程学习记录 -->
  <resultMap type="com.chinamobo.ue.course.entity.TomCourseLearningRecord" id="CourseLearningResultMap">
  	<result column="COURSE_ID" property="courseId" jdbcType="DECIMAL" />
  	<result column="CODE" property="code" jdbcType="VARCHAR" />
  	<result column="LEARNING_DATE" property="learningDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <!-- 任务课程 -->
    <resultMap id="TaskResultMap" type="com.chinamobo.ue.course.entity.TomCourses" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="COURSE_ID" property="courseId" jdbcType="DECIMAL" />
    <result column="COURSE_NAME" property="courseName" jdbcType="VARCHAR" />
    <result column="COURSE_ONLINE" property="courseOnline" jdbcType="VARCHAR" />
    <result column="COURSE_TYPE" property="courseType" jdbcType="VARCHAR" />
    <result column="COURSE_GRADE_DIMENSIONS" property="courseGradeDimensions" jdbcType="VARCHAR" />
    <result column="COURSE_IMG" property="courseImg" jdbcType="VARCHAR" />
    <result column="IS_EXCELLENT_COURSE" property="isExcellentCourse" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="VIEWERS" property="viewers" jdbcType="DECIMAL" />
    <result column="THUMB_UP_COUNT" property="thumbUpCount" jdbcType="DECIMAL" />
    <result column="COMMENT_COUNT" property="commentCount" jdbcType="DECIMAL" />
   	<result column="ACTIVITY_ID" property="activityId" jdbcType="DECIMAL" />
  </resultMap>
  <!-- 课程点赞 -->
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    COURSE_ID, COURSE_NUMBER, COURSE_NAME, COURSE_ONLINE, COURSE_INTRODUCTION, COURSE_TYPE, 
    E_CURRENCY, COURSE_GRADE_DIMENSIONS, LECTURER_GRADE_DIMENSIONS, LECTURERS, COURSE_IMG, 
    COURSE_DOWNLOADABLE, IS_EXCELLENT_COURSE, STATUS, OPEN_COMMENT, OPEN_COURSE, ADMINS, 
    VIEWERS, THUMB_UP_COUNT, COMMENT_COUNT, RATETIMES, COURSE_AVERAGE, TOT_SCORE, LECTURER_AVERAGE, 
    COURSE_TIMES, SIGN_IN_TWO_DIMENSION_CODE, GRADE_TWO_DIMENSION_CODE, CREATOR,CREATOR_ID, CREATE_TIME, 
    OPERATOR, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from TOM_COURSES
    where COURSE_ID = #{courseId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from TOM_COURSES
    where COURSE_ID = #{courseId,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="courseId" parameterType="com.chinamobo.ue.course.entity.TomCourses" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into TOM_COURSES (<!-- COURSE_ID, --> COURSE_NUMBER, COURSE_NAME, 
      COURSE_ONLINE, COURSE_INTRODUCTION, COURSE_TYPE, 
      E_CURRENCY, COURSE_GRADE_DIMENSIONS, LECTURER_GRADE_DIMENSIONS, 
      LECTURERS, COURSE_IMG, COURSE_DOWNLOADABLE, 
      IS_EXCELLENT_COURSE, STATUS, OPEN_COMMENT, 
      OPEN_COURSE, ADMINS, VIEWERS, 
      THUMB_UP_COUNT, COMMENT_COUNT, RATETIMES, 
      COURSE_AVERAGE, TOT_SCORE, LECTURER_AVERAGE, 
      COURSE_TIMES, SIGN_IN_TWO_DIMENSION_CODE, GRADE_TWO_DIMENSION_CODE, 
      CREATOR,CREATOR_ID, CREATE_TIME, OPERATOR, 
      UPDATE_TIME)
    values (<!-- COURSES_SEQ.nextval, --> #{courseNumber,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{courseOnline,jdbcType=VARCHAR}, #{courseIntroduction,jdbcType=VARCHAR}, #{courseType,jdbcType=VARCHAR}, 
      #{eCurrency,jdbcType=DECIMAL}, #{courseGradeDimensions,jdbcType=VARCHAR}, #{lecturerGradeDimensions,jdbcType=VARCHAR}, 
      #{lecturers,jdbcType=VARCHAR}, #{courseImg,jdbcType=VARCHAR}, #{courseDownloadable,jdbcType=VARCHAR}, 
      #{isExcellentCourse,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{openComment,jdbcType=VARCHAR}, 
      #{openCourse,jdbcType=VARCHAR}, #{admins,jdbcType=VARCHAR}, #{viewers,jdbcType=DECIMAL}, 
      #{thumbUpCount,jdbcType=DECIMAL}, #{commentCount,jdbcType=DECIMAL}, #{ratetimes,jdbcType=DECIMAL}, 
      #{courseAverage,jdbcType=DECIMAL}, #{totScore,jdbcType=DECIMAL}, #{lecturerAverage,jdbcType=DECIMAL}, 
      #{courseTimes,jdbcType=DECIMAL}, #{signInTwoDimensionCode,jdbcType=VARCHAR}, #{gradeTwoDimensionCode,jdbcType=VARCHAR}, 
      #{creator,jdbcType=VARCHAR}, #{creatorId,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="courseId" parameterType="com.chinamobo.ue.course.entity.TomCourses" >
   <!-- <selectKey resultType="INTEGER" order="BEFORE" keyProperty="courseId">  
       SELECT COURSES_SEQ.NEXTVAL as courseId from DUAL
   </selectKey> --> 
    insert into TOM_COURSES
    <trim prefix="(" suffix=")" suffixOverrides="," >
        <!-- COURSE_ID, -->
      <if test="courseNumber != null" >
        COURSE_NUMBER,
      </if>
      <if test="courseName != null" >
        COURSE_NAME,
      </if>
      <if test="courseOnline != null" >
        COURSE_ONLINE,
      </if>
      <if test="courseIntroduction != null" >
        COURSE_INTRODUCTION,
      </if>
      <if test="courseType != null" >
        COURSE_TYPE,
      </if>
      <if test="eCurrency != null" >
        E_CURRENCY,
      </if>
      <if test="courseGradeDimensions != null" >
        COURSE_GRADE_DIMENSIONS,
      </if>
      <if test="lecturerGradeDimensions != null" >
        LECTURER_GRADE_DIMENSIONS,
      </if>
      <if test="lecturers != null" >
        LECTURERS,
      </if>
      <if test="courseImg != null" >
        COURSE_IMG,
      </if>
      <if test="courseDownloadable != null" >
        COURSE_DOWNLOADABLE,
      </if>
      <if test="isExcellentCourse != null" >
        IS_EXCELLENT_COURSE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="openComment != null" >
        OPEN_COMMENT,
      </if>
      <if test="openCourse != null" >
        OPEN_COURSE,
      </if>
      <if test="admins != null" >
        ADMINS,
      </if>
      <if test="viewers != null" >
        VIEWERS,
      </if>
      <if test="thumbUpCount != null" >
        THUMB_UP_COUNT,
      </if>
      <if test="commentCount != null" >
        COMMENT_COUNT,
      </if>
      <if test="ratetimes != null" >
        RATETIMES,
      </if>
      <if test="courseAverage != null" >
        COURSE_AVERAGE,
      </if>
      <if test="totScore != null" >
        TOT_SCORE,
      </if>
      <if test="lecturerAverage != null" >
        LECTURER_AVERAGE,
      </if>
      <if test="courseTimes != null" >
        COURSE_TIMES,
      </if>
      <if test="signInTwoDimensionCode != null" >
        SIGN_IN_TWO_DIMENSION_CODE,
      </if>
      <if test="gradeTwoDimensionCode != null" >
        GRADE_TWO_DIMENSION_CODE,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="creatorId != null" >
        CREATOR_ID,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="operator != null" >
        OPERATOR,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
       <!--  #{courseId,jdbcType=DECIMAL}, -->
      <if test="courseNumber != null" >
        #{courseNumber,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseOnline != null" >
        #{courseOnline,jdbcType=VARCHAR},
      </if>
      <if test="courseIntroduction != null" >
        #{courseIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null" >
        #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="eCurrency != null" >
        #{eCurrency,jdbcType=DECIMAL},
      </if>
      <if test="courseGradeDimensions != null" >
        #{courseGradeDimensions,jdbcType=VARCHAR},
      </if>
      <if test="lecturerGradeDimensions != null" >
        #{lecturerGradeDimensions,jdbcType=VARCHAR},
      </if>
      <if test="lecturers != null" >
        #{lecturers,jdbcType=VARCHAR},
      </if>
      <if test="courseImg != null" >
        #{courseImg,jdbcType=VARCHAR},
      </if>
      <if test="courseDownloadable != null" >
        #{courseDownloadable,jdbcType=VARCHAR},
      </if>
      <if test="isExcellentCourse != null" >
        #{isExcellentCourse,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="openComment != null" >
        #{openComment,jdbcType=VARCHAR},
      </if>
      <if test="openCourse != null" >
        #{openCourse,jdbcType=VARCHAR},
      </if>
      <if test="admins != null" >
        #{admins,jdbcType=VARCHAR},
      </if>
      <if test="viewers != null" >
        #{viewers,jdbcType=DECIMAL},
      </if>
      <if test="thumbUpCount != null" >
        #{thumbUpCount,jdbcType=DECIMAL},
      </if>
      <if test="commentCount != null" >
        #{commentCount,jdbcType=DECIMAL},
      </if>
      <if test="ratetimes != null" >
        #{ratetimes,jdbcType=DECIMAL},
      </if>
      <if test="courseAverage != null" >
        #{courseAverage,jdbcType=DECIMAL},
      </if>
      <if test="totScore != null" >
        #{totScore,jdbcType=DECIMAL},
      </if>
      <if test="lecturerAverage != null" >
        #{lecturerAverage,jdbcType=DECIMAL},
      </if>
      <if test="courseTimes != null" >
        #{courseTimes,jdbcType=DECIMAL},
      </if>
      <if test="signInTwoDimensionCode != null" >
        #{signInTwoDimensionCode,jdbcType=VARCHAR},
      </if>
      <if test="gradeTwoDimensionCode != null" >
        #{gradeTwoDimensionCode,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinamobo.ue.course.entity.TomCourses" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TOM_COURSES
    <set >
      <if test="courseNumber != null" >
        COURSE_NUMBER = #{courseNumber,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        COURSE_NAME = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseOnline != null" >
        COURSE_ONLINE = #{courseOnline,jdbcType=VARCHAR},
      </if>
      <if test="courseIntroduction != null" >
        COURSE_INTRODUCTION = #{courseIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null" >
        COURSE_TYPE = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="eCurrency != null" >
        E_CURRENCY = #{eCurrency,jdbcType=DECIMAL},
      </if>
      <if test="courseGradeDimensions != null" >
        COURSE_GRADE_DIMENSIONS = #{courseGradeDimensions,jdbcType=VARCHAR},
      </if>
      <if test="lecturerGradeDimensions != null" >
        LECTURER_GRADE_DIMENSIONS = #{lecturerGradeDimensions,jdbcType=VARCHAR},
      </if>
      <if test="lecturers != null" >
        LECTURERS = #{lecturers,jdbcType=VARCHAR},
      </if>
      <if test="courseImg != null" >
        COURSE_IMG = #{courseImg,jdbcType=VARCHAR},
      </if>
      <if test="courseDownloadable != null" >
        COURSE_DOWNLOADABLE = #{courseDownloadable,jdbcType=VARCHAR},
      </if>
      <if test="isExcellentCourse != null" >
        IS_EXCELLENT_COURSE = #{isExcellentCourse,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="openComment != null" >
        OPEN_COMMENT = #{openComment,jdbcType=VARCHAR},
      </if>
      <if test="openCourse != null" >
        OPEN_COURSE = #{openCourse,jdbcType=VARCHAR},
      </if>
      <if test="admins != null" >
        ADMINS = #{admins,jdbcType=VARCHAR},
      </if>
      <if test="adminNames != null" >
        ADMIN_NAMES=#{adminNames,jdbcType=VARCHAR},
      </if>
      <if test="viewers != null" >
        VIEWERS = #{viewers,jdbcType=DECIMAL},
      </if>
      <if test="thumbUpCount != null" >
        THUMB_UP_COUNT = #{thumbUpCount,jdbcType=DECIMAL},
      </if>
      <if test="commentCount != null" >
        COMMENT_COUNT = #{commentCount,jdbcType=DECIMAL},
      </if>
      <if test="ratetimes != null" >
        RATETIMES = #{ratetimes,jdbcType=DECIMAL},
      </if>
      <if test="courseAverage != null" >
        COURSE_AVERAGE = #{courseAverage,jdbcType=DECIMAL},
      </if>
      <if test="totScore != null" >
        TOT_SCORE = #{totScore,jdbcType=DECIMAL},
      </if>
      <if test="lecturerAverage != null" >
        LECTURER_AVERAGE = #{lecturerAverage,jdbcType=DECIMAL},
      </if>
      <if test="courseTimes != null" >
        COURSE_TIMES = #{courseTimes,jdbcType=DECIMAL},
      </if>
      <if test="signInTwoDimensionCode != null" >
        SIGN_IN_TWO_DIMENSION_CODE = #{signInTwoDimensionCode,jdbcType=VARCHAR},
      </if>
      <if test="gradeTwoDimensionCode != null" >
        GRADE_TWO_DIMENSION_CODE = #{gradeTwoDimensionCode,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        CREATOR_ID = #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        OPERATOR = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where COURSE_ID = #{courseId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinamobo.ue.course.entity.TomCourses" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TOM_COURSES
    set COURSE_NUMBER = #{courseNumber,jdbcType=VARCHAR},
      COURSE_NAME = #{courseName,jdbcType=VARCHAR},
      COURSE_ONLINE = #{courseOnline,jdbcType=VARCHAR},
      COURSE_INTRODUCTION = #{courseIntroduction,jdbcType=VARCHAR},
      COURSE_TYPE = #{courseType,jdbcType=VARCHAR},
      E_CURRENCY = #{eCurrency,jdbcType=DECIMAL},
      COURSE_GRADE_DIMENSIONS = #{courseGradeDimensions,jdbcType=VARCHAR},
      LECTURER_GRADE_DIMENSIONS = #{lecturerGradeDimensions,jdbcType=VARCHAR},
      LECTURERS = #{lecturers,jdbcType=VARCHAR},
      COURSE_IMG = #{courseImg,jdbcType=VARCHAR},
      COURSE_DOWNLOADABLE = #{courseDownloadable,jdbcType=VARCHAR},
      IS_EXCELLENT_COURSE = #{isExcellentCourse,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      OPEN_COMMENT = #{openComment,jdbcType=VARCHAR},
      OPEN_COURSE = #{openCourse,jdbcType=VARCHAR},
      ADMINS = #{admins,jdbcType=VARCHAR},
      VIEWERS = #{viewers,jdbcType=DECIMAL},
      THUMB_UP_COUNT = #{thumbUpCount,jdbcType=DECIMAL},
      COMMENT_COUNT = #{commentCount,jdbcType=DECIMAL},
      RATETIMES = #{ratetimes,jdbcType=DECIMAL},
      COURSE_AVERAGE = #{courseAverage,jdbcType=DECIMAL},
      TOT_SCORE = #{totScore,jdbcType=DECIMAL},
      LECTURER_AVERAGE = #{lecturerAverage,jdbcType=DECIMAL},
      COURSE_TIMES = #{courseTimes,jdbcType=DECIMAL},
      SIGN_IN_TWO_DIMENSION_CODE = #{signInTwoDimensionCode,jdbcType=VARCHAR},
      GRADE_TWO_DIMENSION_CODE = #{gradeTwoDimensionCode,jdbcType=VARCHAR},
      CREATOR = #{creator,jdbcType=VARCHAR},
      CREATOR_ID = #{creatorId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      OPERATOR = #{operator,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where COURSE_ID = #{courseId,jdbcType=DECIMAL}
  </update>
  <select id="countByExample" parameterType="com.chinamobo.ue.course.entity.TomCourses" resultType="java.lang.Integer">
   select count(*) from TOM_COURSES where 1=1
    <if test="status != null" >
        and STATUS = #{status,jdbcType=VARCHAR}
      </if>
     <if test="courseName != null" > 
        and INSTR(COURSE_NAME,#{courseName,jdbcType=VARCHAR})>0
      </if>
      <if test="courseType != null" >
        and INSTR(COURSE_TYPE,#{courseType,jdbcType=VARCHAR})>0
      </if>
      <if test="courseOnline != null" >
        and COURSE_ONLINE = #{courseOnline,jdbcType=VARCHAR} 
      </if>
        <if test="lecturers != null" >
        and INSTR(LECTURERS,#{lecturers,jdbcType=VARCHAR})>0
      </if>
      <if test="courseType != null" >
         and INSTR(COURSE_TYPE,#{courseType,jdbcType=VARCHAR})>0
      </if>
      <if test="openCourse != null" >
         and OPEN_COURSE = #{openCourse,jdbcType=VARCHAR}
      </if>
  </select>
  
  <select id="selectListByPage" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />    
     FROM TOM_COURSES where 1=1
    <if test="example.status != null" >
        and STATUS = #{example.status,jdbcType=VARCHAR}
      </if>
     <if test="example.courseName != null" > 
        and INSTR(COURSE_NAME,#{example.courseName,jdbcType=VARCHAR})>0
      </if>
      <if test="example.courseType != null" >
        and INSTR(COURSE_TYPE,#{example.courseType,jdbcType=VARCHAR})>0
      </if>
      <if test="example.courseOnline != null" >
        and COURSE_ONLINE = #{example.courseOnline,jdbcType=VARCHAR}
      </if>
      <if test="example.isExcellentCourse != null" >
        and IS_EXCELLENT_COURSE = #{example.isExcellentCourse,jdbcType=VARCHAR} 
      </if>
      <if test="example.lecturers != null" >
        and INSTR(LECTURERS,#{example.lecturers,jdbcType=VARCHAR})>0
      </if>
      <if test="example.openCourse != null" >
         and OPEN_COURSE = #{example.openCourse,jdbcType=VARCHAR}
      </if>
      <if test="listOrder!=null">
      	 order by isnull(${listOrder})-1, ${listOrder} 
      </if>
      <if test="orderBy!=null">
      	${orderBy} <!-- nulls last -->
      </if> 
     limit<![CDATA[
     #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <!-- 查看当前登陆人所有课程总数据 -->
   <select id="selectAllCourseByUserCodeApi" parameterType="string" resultMap="BaseResultMap">
	    select DISTINCT c.* from TOM_COURSES c LEFT JOIN TOM_COURSE_EMP_RELATION e on c.course_id = e .course_id where 
		((e.code = #{code,jdbcType=VARCHAR} and e.STATUS = 'Y' ) or c.open_course ='Y') 
   </select>
   <!-- 查看当前登陆人所有课程总数据 -->
  <select id="countByExampleApi" parameterType="com.chinamobo.ue.course.entity.TomCourses" resultType="java.lang.Integer">
   select count(*) from (select DISTINCT c.* from TOM_COURSES c LEFT JOIN TOM_COURSE_EMP_RELATION e on c.course_id = e .course_id where 
	((e.code = #{code,jdbcType=VARCHAR} and e.STATUS = 'Y' ) or c.open_course ='Y') 
    <if test="status != null" >
        and c.STATUS = #{status,jdbcType=VARCHAR}
      </if>
     <if test="courseName != null" >
        and INSTR(c.COURSE_NAME,#{courseName,jdbcType=VARCHAR})>0 
      </if>
      <if test="status != null" >
        and c.STATUS = #{status,jdbcType=VARCHAR}
      </if>
      <if test="courseType != null" >
        and INSTR(c.COURSE_TYPE,#{courseType,jdbcType=VARCHAR})>0  
      </if>
      <if test="courseOnline != null" >
        and c.COURSE_ONLINE = #{courseOnline,jdbcType=VARCHAR}
      </if>
      <if test="isExcellentCourse != null" >
        and c.IS_EXCELLENT_COURSE = #{isExcellentCourse,jdbcType=VARCHAR} 
      </if>) as a
  </select>
  <select id="countByExampleApi2" parameterType="com.chinamobo.ue.course.entity.TomCourses" resultType="java.lang.Integer">
  	SELECT
	COUNT(DISTINCT a.COURSE_ID)
	FROM tom_courses a
	LEFT JOIN tom_course_emp_relation b ON a.COURSE_ID=b.COURSE_ID
	WHERE
	((b.`CODE` = #{code,jdbcType=VARCHAR} AND b.`STATUS`='Y')
		OR a.OPEN_COURSE='Y'
		OR a.COURSE_ID IN (SELECT c.COURSE_ID FROM tom_course_other_relation c WHERE c.`CODE` IN (SELECT d.DEPTCODE FROM tom_emp d WHERE d.`CODE` = #{code,jdbcType=VARCHAR}) AND c.`TYPE`='D')
		OR a.COURSE_ID IN (SELECT e.COURSE_ID FROM tom_course_other_relation e WHERE e.`CODE` IN (SELECT f.TAG_ID FROM tom_label_emp_relation f WHERE f.`CODE` = #{code,jdbcType=VARCHAR}) AND e.`TYPE`='L')
		OR a.COURSE_ID IN (SELECT h.COURSE_ID FROM tom_course_other_relation h WHERE h.`CODE` IN (SELECT g.CLASS_ID FROM tom_label_class_relation g WHERE g.`TAG_ID` IN (SELECT j.TAG_ID FROM tom_label_emp_relation j WHERE j.`CODE` = #{code,jdbcType=VARCHAR})) AND h.`TYPE`='C')
	)
	<if test="status != null" >
	  AND a.STATUS = #{status,jdbcType=VARCHAR}
	</if>
	<if test="courseName != null" >
	  AND INSTR(a.COURSE_NAME,#{courseName,jdbcType=VARCHAR})>0 
	</if>
	<if test="status != null" >
	  AND a.STATUS = #{status,jdbcType=VARCHAR}
	</if>
	<if test="courseType != null" >
	  AND INSTR(a.COURSE_TYPE,#{courseType,jdbcType=VARCHAR})>0  
	</if>
	<if test="courseOnline != null" >
	  AND a.COURSE_ONLINE = #{courseOnline,jdbcType=VARCHAR}
	</if>
	<if test="isExcellentCourse != null" >
	  AND a.IS_EXCELLENT_COURSE = #{isExcellentCourse,jdbcType=VARCHAR} 
	</if>
  </select>
  <!-- 查询当前登陆人可看到的课程 -->
  <select id="selectListByPageApi" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
  SELECT DISTINCT c.* FROM
	TOM_COURSES c LEFT JOIN TOM_COURSE_EMP_RELATION e on c.course_id = e .course_id where 
	((e.code = #{example.code,jdbcType=VARCHAR} and e.STATUS = 'Y' ) or c.open_course ='Y') 
	<if test="finishStatus != null" >
        and e.FINISH_STATUS = #{finishStatus,jdbcType=VARCHAR}
      </if>
    <if test="example.status != null" >
        and c.STATUS = #{example.status,jdbcType=VARCHAR}
      </if>
     <if test="example.courseName != null" > 
        and INSTR(c.COURSE_NAME,#{example.courseName,jdbcType=VARCHAR})>0
      </if>
      <if test="example.courseType != null" >
        and INSTR(c.COURSE_TYPE,#{example.courseType,jdbcType=VARCHAR})>0
      </if>
      <if test="example.courseOnline != null" >
        and c.COURSE_ONLINE = #{example.courseOnline,jdbcType=VARCHAR}
      </if>
      <if test="example.isExcellentCourse != null" >
        and c.IS_EXCELLENT_COURSE = #{example.isExcellentCourse,jdbcType=VARCHAR}
      </if>
      <if test="listOrder!=null">
      	 order by isnull(c.${listOrder})-1, c.${listOrder} 
      </if>
      <if test="orderBy!=null">
      	${orderBy} <!-- nulls last -->
      </if>
     limit<![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="selectListByPageApi2" resultMap="BaseResultMap" parameterType="map" >
  	SELECT
		DISTINCT a.*
	FROM tom_courses a
	LEFT JOIN tom_course_emp_relation b ON a.COURSE_ID=b.COURSE_ID
	WHERE
	((b.`CODE` = #{example.code,jdbcType=VARCHAR} AND b.`STATUS`='Y')
		OR a.OPEN_COURSE='Y'
		OR a.COURSE_ID IN (SELECT c.COURSE_ID FROM tom_course_other_relation c WHERE c.`CODE` IN (SELECT d.DEPTCODE FROM tom_emp d WHERE d.`CODE` = #{example.code,jdbcType=VARCHAR}) AND c.`TYPE`='D')
		OR a.COURSE_ID IN (SELECT e.COURSE_ID FROM tom_course_other_relation e WHERE e.`CODE` IN (SELECT f.TAG_ID FROM tom_label_emp_relation f WHERE f.`CODE` = #{example.code,jdbcType=VARCHAR}) AND e.`TYPE`='L')
		OR a.COURSE_ID IN (SELECT h.COURSE_ID FROM tom_course_other_relation h WHERE h.`CODE` IN (SELECT g.CLASS_ID FROM tom_label_class_relation g WHERE g.`TAG_ID` IN (SELECT j.TAG_ID FROM tom_label_emp_relation j WHERE j.`CODE` = #{example.code,jdbcType=VARCHAR})) AND h.`TYPE`='C')
	)
	<if test="finishStatus != null" >
        AND b.FINISH_STATUS = #{finishStatus,jdbcType=VARCHAR}
    </if>
    <if test="example.status != null" >
        AND a.STATUS = #{example.status,jdbcType=VARCHAR}
    </if>
	<if test="example.courseName != null" > 
	    AND INSTR(a.COURSE_NAME,#{example.courseName,jdbcType=VARCHAR})>0
	</if>
	<if test="example.courseType != null" >
	 	AND INSTR(a.COURSE_TYPE,#{example.courseType,jdbcType=VARCHAR})>0
	</if>
	<if test="example.courseOnline != null" >
	 	AND a.COURSE_ONLINE = #{example.courseOnline,jdbcType=VARCHAR}
	</if>
	<if test="example.isExcellentCourse != null" >
	 	AND a.IS_EXCELLENT_COURSE = #{example.isExcellentCourse,jdbcType=VARCHAR}
	</if>
	<if test="listOrder!=null">
		order by isnull(a.${listOrder})-1, a.${listOrder} 
	</if>
	<if test="orderBy!=null">
		${orderBy}
	</if>
	limit<![CDATA[#{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="selectByLecturerId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from TOM_COURSES
    where INSTR(LECTURERS,#{lecturerId,jdbcType=DECIMAL})>0
  </select>
 <!-- 查询课程信息 -->
  <select id="findCourses" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />    
    from TOM_COURSES
  </select>
  <!-- 收藏课程 -->	
  <insert id="insertFavorite" parameterType="com.chinamobo.ue.course.entity.TomFavoriteCourse" >
  	insert into TOM_FAVORITE_COURSE (CODE,COURSE_ID,STATUS,CREATE_TIME)
    values (#{code,jdbcType=VARCHAR},#{courseId,jdbcType=DECIMAL}, #{status,jdbcType=VARCHAR},
    #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <!-- 更新收藏 -->
  <update id="updateByCourseIdandCode" parameterType="com.chinamobo.ue.course.entity.TomFavoriteCourse" >
    update TOM_FAVORITE_COURSE
    <set >
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where COURSE_ID = #{courseId,jdbcType=DECIMAL}
    and CODE = #{code,jdbcType=VARCHAR} 
  </update>
  
  <!-- 根据员工代码和课程id查询收藏课程 -->
  <select id="selectByCourseIdAndCode" resultMap="FavoriteResultMap" parameterType="com.chinamobo.ue.course.entity.TomFavoriteCourse" >
    select 
    CODE,COURSE_ID,CREATE_TIME,STATUS
    from TOM_FAVORITE_COURSE
    where COURSE_ID = #{courseId,jdbcType=DECIMAL} 
    and CODE = #{code,jdbcType=VARCHAR} 
  </select>
  <!-- ThumbUpResultMap -->
  <!-- 课程点赞 -->	
  <insert id="insertThumbUp" parameterType="com.chinamobo.ue.course.entity.TomCourseThumbUp" >
  	insert into TOM_COURSE_THUMB_UP (CODE,COURSE_ID,STATUS,CREATE_TIME)
    values (#{code,jdbcType=VARCHAR},#{courseId,jdbcType=DECIMAL}, #{status,jdbcType=VARCHAR},
    #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <!-- 更新点赞状态 -->
  <update id="updateThumbUpByCourseIdandCode" parameterType="com.chinamobo.ue.course.entity.TomCourseThumbUp" >
    update TOM_COURSE_THUMB_UP
    <set >
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where COURSE_ID = #{courseId,jdbcType=DECIMAL}
    and CODE = #{code,jdbcType=VARCHAR} 
  </update>
  <!-- 查询是否已经点过赞 -->
  <select id="countThumbUpByCourseIdAndCode" parameterType="com.chinamobo.ue.course.entity.TomCourseThumbUp" resultType="java.lang.Integer">
   select count(*) from TOM_COURSE_THUMB_UP where 1=1
     <if test="courseId != null" >
        and COURSE_ID = #{courseId,jdbcType=DECIMAL}
      </if>
      <if test="code != null" >
        and CODE = #{code,jdbcType=VARCHAR} 
      </if>
      <if test="status != null" >
         and STATUS = #{status,jdbcType=VARCHAR}
      </if>
  </select>
  <!-- 根据员工代码和课程id查询点赞的关联信息-->
  <select id="selectThumbUpByCourseIdAndCode" resultMap="ThumbUpResultMap" parameterType="com.chinamobo.ue.course.entity.TomCourseThumbUp" >
    select 
    CODE,COURSE_ID,CREATE_TIME,STATUS
    from TOM_COURSE_THUMB_UP
    where COURSE_ID = #{courseId,jdbcType=DECIMAL} 
    and CODE = #{code,jdbcType=VARCHAR} 
  </select>
  <!-- 查询课程学习记录前三条 -->
  <select id="selectCourseLearningNO3" resultMap="CourseLearningResultMap" parameterType="com.chinamobo.ue.course.entity.TomCourseLearningRecord">
     SELECT L.*
    from (
     select COURSE_ID,CODE,LEARNING_DATE from TOM_COURSE_LEARNING_RECORD order by LEARNING_DATE desc )L
     <![CDATA[
    limit 0,3]]>
  </select>
  
  <!-- 根据任务包查询课程 -->
  <select id="selectByPackageId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
  tc.e_currency , tc.course_id
    from tom_task_package ttp join tom_task_courses_relation cr on ttp.package_id = cr.package_id
    left join tom_courses  tc on cr.course_id = tc.course_id  left join tom_course_emp_relation tcer on tcer.course_id =  tc.course_id  where tcer.finish_status = 'Y'
    and    ttp.package_id = #{packageId}

  
  </select>
  <select id="selectByPackageIdTwo" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select tc.e_currency , tc.course_id from tom_courses tc,tom_task_package ttp,tom_task_courses_relation cr  where ttp.package_id = cr.package_id  and 
     cr.course_id=tc.course_id and ttp.package_id= #{packageId}
  </select>
  <!-- 查询全部公开课 -->
  <select id="selectOpen" resultMap="BaseResultMap" >
  	select * from TOM_COURSES where open_course ='Y' and STATUS = 'Y'
  </select>
  <select id="countTaskCourse" parameterType="map" resultType="java.lang.Integer">
   select count(1) from (
   SELECT DISTINCT c.* ,e.ACTIVITY_ID from TOM_COURSES c ,TOM_ACTIVITY_EMPS_RELATION a,TOM_TASK_COURSES_RELATION d,TOM_ACTIVITY_PROPERTY e
	where c.course_id = d.course_id and a.code =#{code,jdbcType=VARCHAR} and e.ACTIVITY_ID=a.ACTIVITY_ID and e.PACKAGE_ID=d.PACKAGE_ID and c.STATUS = 'Y' AND e.END_TIME<![CDATA[>NOW()]]> and a.APPLY_STATUS='Y'
and ((d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_LEARNING_RECORD 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='Y') or (d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_SIGN_IN_RECORDS 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='N'))) as a
  </select>
  <select id="selectTaskCourse" resultMap="TaskResultMap" parameterType="map" >
   SELECT DISTINCT c.*,e.ACTIVITY_ID as activityId from TOM_COURSES c ,TOM_ACTIVITY_EMPS_RELATION a,TOM_TASK_COURSES_RELATION d,TOM_ACTIVITY_PROPERTY e
	where c.course_id = d.course_id and a.code =#{code,jdbcType=VARCHAR} and e.ACTIVITY_ID=a.ACTIVITY_ID and e.PACKAGE_ID=d.PACKAGE_ID AND e.END_TIME<![CDATA[>NOW()]]> and c.STATUS = 'Y' and a.APPLY_STATUS='Y'
	and ((d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_LEARNING_RECORD 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='Y') or (d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_SIGN_IN_RECORDS 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='N'))
     order by isnull(c.CREATE_TIME)-1, c.CREATE_TIME desc <!-- nulls last  -->
    limit <![CDATA[
     #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
   <select id="selectAllFinishedCourse" parameterType="string" resultMap = "BaseResultMap">
   select c.* FROM TOM_COURSES c LEFT JOIN TOM_COURSE_LEARNING_RECORD a ON c.course_id=a.course_id
	LEFT JOIN TOM_COURSE_SIGN_IN_RECORDS s ON s.course_id=c.course_id
	WHERE c.STATUS = 'Y' AND (a.code =#{code,jdbcType=VARCHAR} OR s.code=#{code,jdbcType=VARCHAR})
  </select>
  <select id="countFinishedCourse" parameterType="map" resultType="java.lang.Integer">
   select count(1) FROM TOM_COURSES c LEFT JOIN TOM_COURSE_LEARNING_RECORD a ON c.course_id=a.course_id
	LEFT JOIN TOM_COURSE_SIGN_IN_RECORDS s ON s.course_id=c.course_id
	WHERE c.STATUS = 'Y' AND (a.code =#{code,jdbcType=VARCHAR} OR s.code=#{code,jdbcType=VARCHAR})
  </select>
   <select id="selectAllUnfinishedCourse" parameterType="string" resultMap="BaseResultMap">
   SELECT DISTINCT c.* ,e.ACTIVITY_ID from TOM_COURSES c ,TOM_ACTIVITY_EMPS_RELATION a,TOM_TASK_COURSES_RELATION d,TOM_ACTIVITY_PROPERTY e
	where c.course_id = d.course_id and a.code =#{code,jdbcType=VARCHAR} and e.ACTIVITY_ID=a.ACTIVITY_ID and e.PACKAGE_ID=d.PACKAGE_ID and c.STATUS = 'Y' and a.APPLY_STATUS='Y'
and ((d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_LEARNING_RECORD 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='Y') or (d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_SIGN_IN_RECORDS 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='N'))
  </select>
  <select id="countUnfinishedCourse" parameterType="map" resultType="java.lang.Integer">
   select count(1) from (
   SELECT DISTINCT c.* ,e.ACTIVITY_ID from TOM_COURSES c ,TOM_ACTIVITY_EMPS_RELATION a,TOM_TASK_COURSES_RELATION d,TOM_ACTIVITY_PROPERTY e
	where c.course_id = d.course_id and a.code =#{code,jdbcType=VARCHAR} and e.ACTIVITY_ID=a.ACTIVITY_ID and e.PACKAGE_ID=d.PACKAGE_ID and c.STATUS = 'Y' and a.APPLY_STATUS='Y'
and ((d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_LEARNING_RECORD 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='Y') or (d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_SIGN_IN_RECORDS 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='N'))) as b
  </select>
  <!-- 查询是否收藏课程 -->
  <select id="selectAllFavoriteCourseByCourseIdAndCode" parameterType="map" resultMap="BaseResultMap">
   select c.*  from TOM_COURSES c,TOM_FAVORITE_COURSE a where c.course_id = a.course_id and c.status='Y'
     <if test="courseId != null" >
        and a.COURSE_ID = #{courseId,jdbcType=DECIMAL}
      </if>
      <if test="code != null" >
        and a.CODE = #{code,jdbcType=VARCHAR} 
      </if>
      <if test="status != null" >
        and a.STATUS = #{status,jdbcType=VARCHAR} 
      </if>
  </select>
  <!-- 查询是否收藏课程 -->
  <select id="countByCourseIdAndCode" parameterType="com.chinamobo.ue.course.entity.TomFavoriteCourse" resultType="java.lang.Integer">
   select count(c.course_id) from TOM_COURSES c,TOM_FAVORITE_COURSE a where c.course_id = a.course_id and c.status='Y'
     <if test="courseId != null" >
        and a.COURSE_ID = #{courseId,jdbcType=DECIMAL}
      </if>
      <if test="code != null" >
        and a.CODE = #{code,jdbcType=VARCHAR} 
      </if>
      <if test="status != null" >
        and a.STATUS = #{status,jdbcType=VARCHAR} 
      </if>
  </select>
  
  <select id="selectFinishedCourse" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
   
	<!-- SELECT c.*,decode(c.COURSE_ONLINE, 'Y',a.LEARNING_DATE,s.CREATE_DATE) sorttime -->  
	
	
	SELECT c.*,if(c.COURSE_ONLINE='Y',a.LEARNING_DATE,s.CREATE_DATE) sorttime
	FROM TOM_COURSES c LEFT JOIN TOM_COURSE_LEARNING_RECORD a ON c.course_id=a.course_id
	LEFT JOIN TOM_COURSE_SIGN_IN_RECORDS s ON s.course_id=c.course_id
	WHERE c.STATUS = 'Y' AND(a.code =#{code,jdbcType=VARCHAR} OR s.code=#{code,jdbcType=VARCHAR})
	order by isnull(sorttime)-1, sorttime desc <!-- nulls last -->
	<if test="startNum != null and endNum != null">
	     limit <![CDATA[
	    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
     </if>
  </select>
  <select id="selectUnfinishedCourse" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
  SELECT DISTINCT c.*,e.ACTIVITY_ID as activityId from TOM_COURSES c ,TOM_ACTIVITY_EMPS_RELATION a,TOM_TASK_COURSES_RELATION d,TOM_ACTIVITY_PROPERTY e
	where c.course_id = d.course_id and a.code =#{code,jdbcType=VARCHAR} and e.ACTIVITY_ID=a.ACTIVITY_ID and e.PACKAGE_ID=d.PACKAGE_ID and c.STATUS = 'Y' and a.APPLY_STATUS='Y'
	and ((d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_LEARNING_RECORD 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='Y') or (d.COURSE_ID not in (select COURSE_ID from TOM_COURSE_SIGN_IN_RECORDS 
	where code = #{code,jdbcType=VARCHAR} ) and c.COURSE_ONLINE='N'))
     order by isnull(c.CREATE_TIME)-1, c.CREATE_TIME desc <!-- nulls last -->
     <if test="startNum != null and endNum != null">
	     limit <![CDATA[
	    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
     </if>
  </select>
    <!-- 根据员工代码查询收藏课程 -->
 <select id="selectByCode" resultMap="BaseResultMap" parameterType="map" >
  SELECT c.* FROM TOM_FAVORITE_COURSE e ,TOM_COURSES c 
	where e.code = #{code,jdbcType=VARCHAR} and e.STATUS = 'Y' and  c.course_id = e.course_id  and c.status='Y'
	order by isnull(e.CREATE_TIME)-1, e.CREATE_TIME desc <!-- nulls last -->
     limit <![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  
  
  <select id="countByExampleForRooling" parameterType="com.chinamobo.ue.course.entity.TomCourses" resultType="java.lang.Integer">
   select count(*) from TOM_COURSES where 1=1 and course_online='Y' and status='Y'
    <if test="status != null" >
        and STATUS = #{status,jdbcType=VARCHAR}
      </if>
     <if test="courseName != null" >
        and INSTR(COURSE_NAME,#{courseName,jdbcType=VARCHAR})>0 
      </if>
      <if test="courseType != null" >
        and INSTR(COURSE_TYPE,#{courseType,jdbcType=VARCHAR})>0
      </if>
      <if test="courseOnline != null" >
        and COURSE_ONLINE = #{courseOnline,jdbcType=VARCHAR} 
      </if>
        <if test="lecturers != null" >
        and INSTR(LECTURERS,#{lecturers,jdbcType=VARCHAR})>0
      </if>
      <if test="courseType != null" >
         and INSTR(COURSE_TYPE,#{courseType,jdbcType=VARCHAR})>0
      </if>
  </select>
  
  <select id="selectListByPageForRooling" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />    
   FROM TOM_COURSES where 1=1 and course_online='Y' and status='Y'
    <if test="example.status != null" >
        and STATUS = #{example.status,jdbcType=VARCHAR}
      </if>
     <if test="example.courseName != null" >
        and INSTR(COURSE_NAME,#{example.courseName,jdbcType=VARCHAR})>0 
      </if>
      <if test="example.courseType != null" >
        and INSTR(COURSE_TYPE,#{example.courseType,jdbcType=VARCHAR})>0
      </if>
      <if test="example.courseOnline != null" >
        and COURSE_ONLINE = #{example.courseOnline,jdbcType=VARCHAR}
      </if>
      <if test="example.isExcellentCourse != null" >
        and IS_EXCELLENT_COURSE = #{example.isExcellentCourse,jdbcType=VARCHAR} 
      </if>
      <if test="example.lecturers != null" >
        and INSTR(LECTURERS,#{example.lecturers,jdbcType=VARCHAR})>0
      </if>
      <if test="listOrder!=null">
      	 order by isnull(${listOrder})-1, ${listOrder} 
      </if>
      <if test="orderBy!=null">
      	${orderBy} <!-- nulls last -->
      </if>
     limit <![CDATA[
    #{startNum,jdbcType=DECIMAL},#{endNum,jdbcType=DECIMAL}]]>
  </select>
  <select id="countTotalCourses" parameterType="map" resultType="java.lang.Integer">
   select count(*) from TOM_COURSES where CREATE_TIME BETWEEN #{beginTime,jdbcType=TIMESTAMP} and #{endTime,jdbcType=TIMESTAMP}
  </select>
</mapper>
